---
title: "Hairy Hermit Crab Infographic"
description: "Exploring changes in California's population using MARINe biodiversity surveys."
author:
  - name: Matteo Torres
    url: https://matteo-torres.github.io/
    affiliation: MEDS
    affiliation-url: https://bren.ucsb.edu/masters-programs/master-environmental-data-science
date: 2025-03-14
categories: [Data Visualization, Science Communication]
toc: true
image: hairyhermit.jpg
---

## Introduction

*Pagurus hirsutiusculus*, commonly known as the hairy hermit crab, is a key intertidal species found along the California coastline. As scavengers, these crabs play a vital role in nutrient cycling by consuming dead organic matter, preventing waste buildup, and contributing to the overall health of their ecosystem. However, over the past two decades, climate change has altered habitat conditions, potentially leading to shifts in their distribution and declines in their populations. Rising ocean temperatures, habitat loss, and changing food availability may all contribute to these changes.

This infographic uses biodiversity survey data from the [Multi-Agency Rocky Intertidal Network (MARINe)](https://marine.ucsc.edu/methods/biodiversity-methods.html) to illustrate how the distribution and abundance of *P. hirsutiusculus* have changed between 2004 and 2024. By visually comparing these two years, we can explore whether populations have declined, migrated, or remained stable along the California coast.

![](infographic.png)

## Approach

To investigate these changes, I focused on visualizing geographical differences and abundance trends at MARINe survey sites over time. Some key questions that guided my analysis include:

1. Is there evidence of a northern migration in response to climate change?
2. Are there notable differences in abundance across California's georegions?
3. Has the population declined significantly over time?

Although this is a serious topic, I wanted to present my findings in an engaging and accessible way for a broad audience. By incorporating a beach-inspired design, I aimed to create an informative yet visually appealing representation of the data.

## Design Process

Designing this infographic required careful consideration of how best to communicate both numerical and categorical data. After testing different approaches, I selected line plots, lollipop charts, and maps because they effectively highlighted the key patterns in my dataset.

To enhance engagement, I used a cohesive beach theme, incorporating natural elements such as shells, bird tracks, and rocks to create a familiar and inviting visual context.

- Line Plot (Abundance Over Time): I modified the design to resemble a shoreline, using shading techniques to mimic ocean tides. One challenge was making the shaded area under the line appear natural in a 2D visualization.
- Lollipop Chart (Abundance by Georegion): To depict abundance across California's regions, I positioned the hermit crabs at varying distances along a beach background. One of the biggest challenges was correctly flipping the chart in R to align counts from north to south.
- Maps (Species Distribution): Using a simple California basemap, I differentiated survey years using red and black markers, making it easy to spot changes in species presence and absence across MARINe sites.

Another major design decision was the layout of the infographic. I divided it into two sections, placing 2004 on the left and 2024 on the right, with the lollipop chart acting as a visual divider. This structure helps guide the audience through the data, making it clear how distributions and abundances have changed over time.

## Visualizations

All visualizations were created in R using `ggplot2` and later refined in Canva for personalization and styling. Click through the sections below to explore the coding choices behind each visualization!

```{r, echo = FALSE, output = FALSE}
# Load packages
library(sf)
library(tmap)
library(readxl)
library(tidyverse)
library(ggpattern)

# Read MARINe biodiversity data
point_contact_data <- read_excel("data/MARINe_biodiversity_data/cbs_data_2025.xlsx", sheet = 2)

quadrat_data <- read_excel("data/MARINe_biodiversity_data/cbs_data_2025.xlsx", sheet = 3)

swath_data <- read_excel("data/MARINe_biodiversity_data/cbs_data_2025.xlsx", sheet = 4)

# hair hermit crab data
hairy_hermit <- bind_rows(point_contact_data, quadrat_data, swath_data) %>% 
  mutate(georegion = str_remove(georegion, "CA ")) %>%
  group_by(state_province, georegion, marine_site_name, latitude, longitude, species_lump, year) %>%
  filter(state_province == "California" & species_lump == "Pagurus hirsutiusculus") %>%
  summarise(num_count = sum(total_count, na.rm = TRUE))

# Convert to an sf object for mapping
hairy_hermit_sf <- st_as_sf(hairy_hermit, coords = c("longitude", "latitude"), crs = 4326)

# Filter survey observations in 2004
yr_2004 <- hairy_hermit_sf %>%
  filter(year == 2004 & num_count > 0)

# Filter survey observations in 2024
yr_2024 <- hairy_hermit_sf %>%
  filter(year == 2024 & num_count > 0)

# MARINe sites
sites <- bind_rows(point_contact_data, quadrat_data, swath_data) %>%
  filter(state_province == "California") %>%
  select(state_province, marine_site_name, latitude, longitude) %>%
  distinct(marine_site_name, .keep_all = TRUE) %>%
  st_as_sf(coords = c("longitude", "latitude"), crs = 4326)

# Read in California state boundary 
california <- spData::us_states %>% 
  filter(NAME == "California") %>%
  st_transform(crs = 4326)
```

```{r}
#| code-fold: true

# Map (2004)
tm_shape(california) +
  tm_polygons(col = "#855f35",
              alpha = 0.7,
              border.col = "#855f35",
              border.alpha = 0.7) +
tm_shape(sites) +
  tm_dots(col = "black",
          size = 0.3,
          alpha = 0.5) +
tm_shape(yr_2004) +
  tm_dots(col = "red",
          size = 0.3,
          shape = 8) +
  tm_layout(frame = FALSE,
            bg = "#ffe797")
```

```{r}
#| code-fold: true

# Map (2024)
tm_shape(california) +
  tm_polygons(col = "#855f35",
              alpha = 0.7,
              border.col = "#855f35",
              border.alpha = 0.7) +
tm_shape(sites) +
  tm_dots(col = "black",
          size = 0.3,
          alpha = 0.5) +
tm_shape(yr_2024) + 
  tm_dots(col = "red",
          size = 0.3,
          shape = 8) +
  tm_layout(frame = FALSE,
            bg = "#ffe797")
```

```{r}
#| code-fold: true

# Lollipop chart
hairy_hermit %>%
  filter(year %in% c(2004, 2024)) %>%
  group_by(georegion, year) %>%
  summarise(total_count = sum(num_count), .groups = "drop") %>%
  mutate(total_count = ifelse(year == 2004, -total_count, total_count)) %>%
  mutate(georegion = fct_relevel(georegion, c("Channel Islands South",
                                              "Channel Islands North",
                                              "South",
                                              "Central",
                                              "North"))) %>% 
  ggplot(aes(x = georegion, y = total_count)) +  
  geom_linerange(aes(ymin = 0, ymax = total_count),
                 color = "black",
                 linewidth = 0.8, 
                 linetype = "dotted") +
  geom_hline(yintercept = 0, 
             linetype = "solid", 
             color = "black") +
  coord_flip() +
  scale_y_continuous(expand = c(0, 0), limits = c(-261, 261)) +
  theme_void() +
  theme(panel.background = element_rect(fill = "#ffe797"))
```

```{r}
#| code-fold: true

# Line plot
hairy_hermit %>%
  filter(year %in% c(2004:2024)) %>%
  group_by(year) %>%
  summarize(total = sum(num_count)) %>%
  ungroup() %>%
  ggplot(aes(x = year, y = total)) +
  geom_line(color = "aliceblue", linewidth = 8, alpha = 0.5) +
  geom_area_pattern(pattern = "gradient",
                    pattern_fill = "#006AB2",
                    pattern_fill2 = "lightblue") +
  scale_x_continuous(expand = c(0, 0), breaks = c(2004, 2009, 2014, 2019, 2024)) +
  scale_y_continuous(expand = c(0, 0), limits = c(0, 1000)) +
  labs(y = "Total Count") +
  theme_classic() +
  theme(plot.margin = margin(t = 1, r = 1, b = 1, l = 0.5, "cm"),
        panel.background = element_rect(fill = "#ffe797"),
        plot.background = element_rect(fill = "#ffe797"),
        axis.title.x.bottom = element_blank(),
        axis.title = element_text(size = 14),
        axis.text = element_text(size = 12, color = "black"))
```


